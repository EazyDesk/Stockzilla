@model Stockzilla.Models.StockItem
@{
    Layout = "_Layout_Signed_In";
    ViewBag.Title = "Edit Stock - Stockzilla";
    ViewBag.Header = "Edit Stock";
}
@section Scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

<div class="col-md-6 col-md-offset-3">
    <form method="post" novalidate>
        @Html.HiddenFor(model => model.StockId)
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.SiteId)

        <div class="form-group">
            @Html.LabelFor(model => model.GRNNo, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.GRNNo, new { @class = "form-control", @placeholder = "GRN No.", @readonly = "readonly" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Product.ProductCode, new { @class = "form-control", @placeholder = "Product Code", @readonly = "readonly" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, new { @class = "control-label" })
            <div class="input-group">
                @if (Model.LocationId != null)
            {
                    @Html.DropDownList("LocationId", null, "Choose Location", new { @class = "form-control", value = Model.Location.Name })
                }
                else
                {
                    @Html.DropDownList("LocationId", null, "Choose Location", new { @class = "form-control" })
                }
                <span class="input-group-btn">
                    <button class="btn btn-toolbar" type="button" onclick="location.href='@Url.Action("Add", "Locations")'"><i class="fa fa-plus-circle"></i></button>
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SerialNo, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.SerialNo, new { @class = "form-control", @placeholder = "Serial No." })
            @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BatchNo, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.BatchNo, new { @class = "form-control", @placeholder = "Batch No." })
            @Html.ValidationMessageFor(model => model.BatchNo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InitialQty, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.InitialQty, new { @class = "form-control", @placeholder = "Initial Qty", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.InitialQty, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.QtyAvailable, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.QtyAvailable, new { @class = "form-control", @placeholder = "Qty Available", id = "quantity", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.QtyAvailable, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CostPerUOM, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.CostPerUOM, new { @class = "form-control", @placeholder = "Cost Per UOM", id = "price" })
            @Html.ValidationMessageFor(model => model.CostPerUOM, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TotalCost, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.TotalCost, new { @class = "form-control", @placeholder = "Total Cost", @readonly = "readonly", id = "total" })
            @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReceivedBy, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ReceivedBy, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateReceived, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.DateReceived, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @placeholder = "Notes", @rows = "3" })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <span><input class="btn btn-success" type="submit" value="Save" />&nbsp;</span>
            <span><input class="btn btn-danger" type="reset" value="Cancel" onclick="location.href='@Url.Action("List", "StockItems")'" /></span>
        </div>
    </form>
</div>