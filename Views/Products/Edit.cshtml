@model Stockzilla.Models.Product
@{
    Layout = "_Layout_Signed_In";
    ViewBag.Title = "Edit Product - Stockzilla";
    ViewBag.Header = "Edit Product";
}

@section Scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

<div class="col-md-6 col-md-offset-3">
    <form method="post" novalidate>
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.SiteId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control", @placeholder = "Product Code" })
            @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Description", @rows = "3" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
            <div class="input-group">
                @if (Model.CategoryId != null)
            {
                    @Html.DropDownList("CategoryId", null, "Choose Category", new { @class = "form-control", value = Model.Category.Name })
                }
                else
                {
                    @Html.DropDownList("CategoryId", null, "Choose Category", new { @class = "form-control" })
                }
                <span class="input-group-btn">
                    <button class="btn btn-toolbar" type="button" onclick="location.href='@Url.Action("Add", "Categories")'"><i class="fa fa-plus-circle"></i></button>
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UOMId, new { @class = "control-label" })
            <div class="input-group">
                @if (Model.UOMId != null)
            {
                    @Html.DropDownList("UOMId", null, "Choose Unit of Measure", new { @class = "form-control", value = Model.UOM.Name })
                }
                else
                {
                    @Html.DropDownList("UOMId", null, "Choose Unit of Measure", new { @class = "form-control" })
                }
                <span class="input-group-btn">
                    <button class="btn btn-toolbar" type="button" onclick="location.href='@Url.Action("Add", "UOMs")'"><i class="fa fa-plus-circle"></i></button>
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Traceability, new { @class = "control-label" })
            @Html.DropDownList("Traceability", new SelectList(
                    new List<Object>{
                        new { value = "FIFO" , text = "FIFO" },
                        new { value = "LIFO" , text = "LIFO" },
                         new { value = "Batch" , text = "Batch" },
                         new { value = "Serial" , text = "Serial"}
                      },
                    "value",
                    "text",
                     2), "Choose Traceability", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Traceability, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "Default Location", new { @class = "control-label" })
            <div class="input-group">
                @if (Model.LocationId != null)
            {
                    @Html.DropDownList("LocationId", null, "Choose Default Location", new { @class = "form-control", value = Model.Location.Name })
                }
                else
                {
                    @Html.DropDownList("LocationId", null, "Choose Default Location", new { @class = "form-control" })
                }
                <span class="input-group-btn">
                    <button class="btn btn-toolbar" type="button" onclick="location.href='@Url.Action("Add", "Locations")'"><i class="fa fa-plus-circle"></i></button>
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReorderLevel, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ReorderLevel, new { @class = "form-control", @placeholder = "Stock Reorder Level" })
            @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.CreatedBy, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <span><input class="btn btn-success" type="submit" value="Save" />&nbsp;</span>
            <span><input class="btn btn-danger" type="reset" value="Cancel" onclick="location.href='@Url.Action("List", "Products")'" /></span>
        </div>
    </form>
</div>